x-project-name: "AuditOrbit"

services:
  db:
    image: postgres:16-alpine
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-auditdb}
      POSTGRES_USER: ${POSTGRES_USER:-audit}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-auditpw}
    ports:
      - "5432:5432"
    volumes:
      - db-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U audit -d auditdb"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 5s

  api:
    build:
      context: ../api
      dockerfile: Dockerfile
    restart: unless-stopped
    env_file:
      - ../.env
    depends_on:
      - db
      - redis
      - minio
    ports:
      - "8000:8000"

  minio:
    image: quay.io/minio/minio:RELEASE.2024-09-09T16-59-28Z
    restart: unless-stopped
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER:-auditorbit}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD:-auditorbit123}
    command: server /data --console-address ":9001"
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio-data:/data

  redis:
    image: redis:7-alpine
    restart: unless-stopped
    command: redis-server --appendonly yes
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data

  ai:
    build:
      context: ../ai
      dockerfile: Dockerfile
    image: audit-orbit-ai:latest
    env_file:
      - ../.env
    environment:
      - S3_ENDPOINT=${S3_ENDPOINT:-http://minio:9000}
      - S3_ACCESS_KEY=${S3_ACCESS_KEY:-auditorbit}
      - S3_SECRET_KEY=${S3_SECRET_KEY:-auditorbit123}
      - S3_BUCKET=${S3_BUCKET:-auditevidence}
      - REDIS_URL=${REDIS_URL:-redis://redis:6379/0}
      - AI_QUEUE=${AI_QUEUE:-ai-tasks}
      - DATABASE_URL=${DATABASE_URL:-postgresql+psycopg://audit:auditpw@db:5432/auditdb}
      - AI_TMP=${AI_TMP:-/tmp/ai}
    depends_on:
      - redis
      - db
      - minio

volumes:
  db-data:
  minio-data:
  redis-data:
